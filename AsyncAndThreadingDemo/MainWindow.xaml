<Window x:Class="AsyncAndThreadingDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AsyncAndThreadingDemo"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Grid>

        <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="clr-namespace:System;assembly=mscorlib">


            <Ellipse Name="elips" Width="24" Height="24" Fill="Red"
             Canvas.Left="96">

                <Ellipse.Triggers>
                    <EventTrigger RoutedEvent="Ellipse.Loaded">
                        <BeginStoryboard>
                            <Storyboard TargetName="elips" RepeatBehavior="Forever">
                                <DoubleAnimation
                                Storyboard.TargetProperty="(Canvas.Top)"
                                From="96" To="300" Duration="0:0:1"
                                AutoReverse="True" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Ellipse.Triggers>
            </Ellipse>
            <Button Content="Start long process" Canvas.Left="136" Canvas.Top="121" Width="137" Height="47" Name="StartLongProcess" Click="StartLongProcess_Click"/>
            <ProgressBar Height="23" Canvas.Left="151" Canvas.Top="220" Width="369" Name="TaskProgress" />
        </Canvas>

        <Button Content="Test threads" HorizontalAlignment="Left" Width="138" Margin="135,50,0,316.5" Click="Button_Click"/>
        <Grid Margin="311,50,0,0.5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Label Content="On UI thread after Yield?" Grid.Row="0" />
            <Label Content="On UI thread after ConfigureAwait(false)?" Grid.Row="1" />
            <Label Content="On UI thread after await Test2Async?" Grid.Row="2" />
            <Label Name="Label1" Grid.Column="1" />
            <Label Name="Label2" Grid.Column="1" Grid.Row="1" />
            <Label Name="Label3" Grid.Column="1" Grid.Row="2" />
        </Grid>

    </Grid>
</Window>
